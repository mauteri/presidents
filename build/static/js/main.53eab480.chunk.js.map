{"version":3,"sources":["President.js","PresidentList.js","index.js"],"names":["President","props","bornDate","setDate","president","className","src","photo","class","name","born","date","Math","floor","Date","getTime","PresidentList","presidents","data","entries","diedDate","startDate","endDate","list","years","start","end","push","died","App","useState","onChange","e","target","value","type","ReactDOM","render","document","querySelector"],"mappings":"kKA4BeA,EArBG,SAAAC,GACjB,IANqBC,EAAUC,EAMzBC,EAAYH,EAAMG,UAExB,OACC,yBAAKC,UAAU,UACd,yBAAKA,UAAU,WACd,yBAAKA,UAAU,SACd,yBAAKC,IAAKF,EAAUG,SAErB,yBAAKF,UAAU,WACd,wBAAIG,MAAM,UAAUJ,EAAUK,MAC9B,yBAAKJ,UAAU,QAAf,SAhBiBH,EAiBGE,EAAUM,KAhBlCP,GAD+BA,EAiBSF,EAAMU,OAhBd,GACzBC,KAAKC,OAAO,IAAIC,KAAKX,GAAW,IAAIW,KAAKZ,GAAUa,WAAa,gB,OCyDzDC,EAzDO,SAAAf,GACrB,IAD8B,EACxBgB,EAAa,GADW,cAGDC,EAAKC,WAHJ,IAG9B,2BAA6C,CAAC,IAAD,yBAA9Bf,GAA8B,WACxCF,OAAQ,EAAEkB,OAAQ,EAAEC,OAAS,EAAEC,OAAO,EAE1C,OAAQrB,EAAMsB,MACb,IAAK,UAAL,oBACyBnB,EAAUoB,MAAML,WADzC,IACC,2BAAmD,CAAC,IAAD,yBAArCK,GAAqC,WAClDH,EAAY,IAAIP,KAAKU,EAAMC,OAC3BH,EAAaE,EAAME,IAAO,IAAIZ,KAAKU,EAAME,KAAO,IAAIZ,KAEhDb,EAAMU,MAAQU,GAAapB,EAAMU,MAAQW,GAC5CL,EAAWU,KAAM,kBAAC,EAAD,CAAWvB,UAAWA,EAAWO,KAAMV,EAAMU,SANjE,8BASC,MACD,IAAK,WACJT,EAAW,IAAIY,KAAKV,EAAUM,MAC9BU,EAAYhB,EAAUwB,KAAQ,IAAId,KAAKV,EAAUwB,MAAQ,IAAId,KAF9D,oBAIyBV,EAAUoB,MAAML,WAJzC,IAIC,2BAAmD,CAAC,IAAD,yBAArCK,GAAqC,WAClDF,EAAaE,EAAME,IAAO,IAAIZ,KAAKU,EAAME,KAAO,IAAIZ,KAEhDb,EAAMU,MAAQW,GAAWrB,EAAMU,MAAQT,GAAYD,EAAMU,MAAQS,GACpEH,EAAWU,KAAK,kBAAC,EAAD,CAAWvB,UAAWA,EAAWO,KAAMV,EAAMU,SARhE,8BAWC,MACD,IAAK,SACJT,EAAW,IAAIY,KAAKV,EAAUM,MAC9BU,EAAYhB,EAAUwB,KAAQ,IAAId,KAAKV,EAAUwB,MAAQ,IAAId,KAF9D,oBAIyBV,EAAUoB,MAAML,WAJzC,IAIC,2BAAmD,CAAC,IAAD,yBAArCK,GAAqC,WAClDH,EAAY,IAAIP,KAAKU,EAAMC,OAEvBxB,EAAMU,MAAQU,GAAapB,EAAMU,MAAQT,GAAYD,EAAMU,MAAQS,GACtEH,EAAWU,KAAK,kBAAC,EAAD,CAAWvB,UAAWA,EAAWO,KAAMV,EAAMU,SARhE,8BAWC,MACD,QACCM,EAAWU,KAAM,kBAAC,EAAD,CAAWvB,UAAWA,EAAWO,KAAMV,EAAMU,UA1CnC,8BA8C9B,OACC,yBAAKN,UAAU,sCACd,4BAAKJ,EAAMsB,MACX,yBAAKlB,UAAU,uBACbY,KClDCY,EAAM,WAAO,IAAD,EACOC,mBAAS,IAAIhB,MADpB,mBACVH,EADU,KACJR,EADI,KAEjB,OACC,yBAAKE,UAAU,+BACd,+EACA,2BAAO0B,SAAU,SAACC,GAAD,OAAO7B,EAAQ,IAAIW,KAAKkB,EAAEC,OAAOC,SAASC,KAAK,SAChE,kBAAC,EAAD,CAAeZ,KAAK,UAAUZ,KAAMA,IACpC,kBAAC,EAAD,CAAeY,KAAK,WAAWZ,KAAMA,IACrC,kBAAC,EAAD,CAAeY,KAAK,SAASZ,KAAMA,MAKtCyB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,W","file":"static/js/main.53eab480.chunk.js","sourcesContent":["import React from 'react';\n\nconst calculateAge = (bornDate, setDate ) => {\n\tsetDate = (setDate) ? setDate : '';\n\treturn Math.floor((new Date(setDate) - new Date(bornDate).getTime()) / 3.15576e+10);\n};\n\nconst President = props => {\n\tconst president = props.president;\n\n\treturn(\n\t\t<div className=\"column\">\n\t\t\t<div className=\"ui card\">\n\t\t\t\t<div className=\"image\">\n\t\t\t\t\t<img src={president.photo} />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"content\">\n\t\t\t\t\t<h3 class=\"header\">{president.name}</h3>\n\t\t\t\t\t<div className=\"meta\">\n\t\t\t\t\t\tAge: {calculateAge(president.born, props.date)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n\n};\n\nexport default President;\n","import React from 'react';\nimport President from './President';\nimport data from './data.json';\n\nconst PresidentList = props => {\n\tconst presidents = [];\n\n\tfor (const [i, president] of data.entries()) {\n\t\tlet bornDate, diedDate, startDate, endDate;\n\n\t\tswitch (props.list) {\n\t\t\tcase 'Current' :\n\t\t\t\tfor (const[j, years] of president.years.entries()) {\n\t\t\t\t\tstartDate = new Date(years.start);\n\t\t\t\t\tendDate   = (years.end) ? new Date(years.end) : new Date();\n\n\t\t\t\t\tif (props.date >= startDate && props.date <= endDate) {\n\t\t\t\t\t\tpresidents.push( <President president={president} date={props.date} /> );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'Previous' :\n\t\t\t\tbornDate = new Date(president.born);\n\t\t\t\tdiedDate = (president.died) ? new Date(president.died) : new Date();\n\n\t\t\t\tfor (const[j, years] of president.years.entries()) {\n\t\t\t\t\tendDate   = (years.end) ? new Date(years.end) : new Date();\n\n\t\t\t\t\tif (props.date >= endDate && props.date >= bornDate && props.date <= diedDate) {\n\t\t\t\t\t\tpresidents.push(<President president={president} date={props.date} />);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'Future' :\n\t\t\t\tbornDate = new Date(president.born);\n\t\t\t\tdiedDate = (president.died) ? new Date(president.died) : new Date();\n\n\t\t\t\tfor (const[j, years] of president.years.entries()) {\n\t\t\t\t\tstartDate = new Date(years.start);\n\n\t\t\t\t\tif (props.date <= startDate && props.date >= bornDate && props.date <= diedDate) {\n\t\t\t\t\t\tpresidents.push(<President president={president} date={props.date} />);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tdefault :\n\t\t\t\tpresidents.push( <President president={president} date={props.date} /> );\n\t\t}\n\t}\n\n\treturn(\n\t\t<div className=\"ui raised padded container segment\">\n\t\t\t<h2>{props.list}</h2>\n\t\t\t<div className=\"ui four column grid\">\n\t\t\t\t{presidents}\n\t\t\t</div>\n\n\t\t</div>\n\t);\n};\n\nexport default PresidentList;\n","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport PresidentList from './PresidentList';\n\nconst App = () => {\n\tconst [date, setDate] = useState(new Date());\n\treturn(\n\t\t<div className=\"ui padded container segment\">\n\t\t\t<h1>Which U.S. Presidents Were Around On This Date?</h1>\n\t\t\t<input onChange={(e) => setDate(new Date(e.target.value))} type=\"date\" />\n\t\t\t<PresidentList list=\"Current\" date={date} />\n\t\t\t<PresidentList list=\"Previous\" date={date} />\n\t\t\t<PresidentList list=\"Future\" date={date} />\n\t\t</div>\n\t);\n}\n\nReactDOM.render(<App />, document.querySelector('#root'));\n"],"sourceRoot":""}